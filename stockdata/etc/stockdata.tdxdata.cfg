# 导出通达信可用数据，数据文件存放的根目录,是user.home下的相对路径

############
#  格式 ：     *    *    *    *    *    *   *
#           [秒] [分] [小时] [日] [月] [周] [年]
#  通配符说明:
#     * 表示所有值. 例如:在分的字段上设置 "*",表示每一分钟都会触发。
#     ? 表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如:要在每月的10号触发一个操作，
#       但不关心是周几，所以需要周位置的那个字段设置为"?" 具体设置为 0 0 0 10 * ?
#     - 表示区间。例如 在小时上设置 "10-12",表示 10,11,12点都会触发。
#     , 表示指定多个值，例如在周字段上设置 "MON,WED,FRI" 表示周一，周三和周五触发
#     / 用于递增触发。如在秒上面设置"5/15" 表示从5秒开始，每增15秒触发(5,20,35,50)。
#       在月字段上设置'1/3'所示每月1号开始，每隔三天触发一次。
#     L 表示最后的意思。在日字段设置上，表示当月的最后一天(依据当前月份，如果是二月还会依据
#       是否是润年[leap]), 在周字段上表示星期六，相当于"7"或"SAT"。如果在"L"前加上数字，
#       则表示该数据的最后一个。例如在周字段上设置"6L"这样的格式,则表示“本月最后一个星期五"
#     W 表示离指定日期的最近那个工作日(周一至周五). 例如在日字段上设置"15W"，
#       表示离每月15号最近的那个工作日触发。如果15号正好是周六，则找最近的周五(14号)触发,
#       如果15号是周未，则找最近的下周一(16号)触发.如果15号正好在工作日(周一至周五)，
#       则就在该天触发。如果指定格式为 "1W",它则表示每月1号往后最近的工作日触发。
#       如果1号正是周六，则将在3号下周一触发。(注，"W"前只能设置具体的数字,不允许区间"-").
#  小提示:
#     'L'和 'W'可以一组合使用。如果在日字段上设置"LW",则表示在本月的最后一个工作日触发(一般指发工资 )
#     序号(表示每月的第几个周几)，例如在周字段上设置"6#3"表示在每月的第三个周六.注意如果指定"#5",
#     正好第五周没有周六，则不会触发该配置(用在母亲节和父亲节再合适不过了)
#
#    缺省：每天6、8、18点执行3次
############
# scheduler.expression = 0 */10 * * * ?



##############
#  自定义指标数据，对应通达信自定义数据类型，分两中 - 系列和报表
#
#  1、每种最多定义99个，从1～99，序号不一定要连续，可以跳，格式如下,成对出现：
#     index.serial.x.name = ...
#     index.serial.x.sql  = ...
#
#  2、系列型指标的SQL，不能有参数，报表型指标的SQL，有一个参数，当前季报日期
#
########################
# index.serial.1.name =
# index.serial.1.sql  =

index.serial.1.name = 股东-股东户数-c
index.serial.1.sql  = SELECT CONCAT_WS('|', left(d.stockcode,1)='6', d.stockcode, DATE_FORMAT(if(d.endtradedate is null, d.enddate, d.endtradedate),'%Y%m%d'), d.HolderNum) FROM gdhs d order by d.stockCode, d.enddate

index.serial.21.name = 主力-机构持仓-c
index.serial.21.sql  = SELECT  CONCAT_WS('|', left(SCode,1)='6', SCode, DATE_FORMAT(EndTradeDate,'%Y%m%d'), sum(LTZB) ) FROM jgcc where lx in(1,2,3,5) and EndTradeDate is not null group by SCode, EndTradeDate order by SCode, EndTradeDate

index.serial.31.name = 十大流通股东-持仓-c
index.serial.31.sql  = SELECT  CONCAT_WS('|', left(SCode,1)='6', SCode, DATE_FORMAT(EndTradeDate,'%Y%m%d'), sum(ZB)*100 ) FROM sdltgd where EndTradeDate is not null group by SCode, EndTradeDate order by SCode, EndTradeDate

###########################################################
#  report
###########

index.report.1.name = 股东-最新增减-c
index.report.1.sql  = SELECT CONCAT_WS('|', left(d.stockcode,1)='6', d.stockcode, DATE_FORMAT(enddate,'%Y%m%d'), sum(d.HolderNumChangeRate)) FROM gdhs d where d.enddate>? and d.HolderNumChangeRate<1000 group by d.stockcode order by d.stockcode

index.report.2.name = 股东-本季增减-c
index.report.2.sql  = SELECT CONCAT_WS('|', left(d.stockcode,1)='6', d.stockcode, DATE_FORMAT(enddate,'%Y%m%d'), d.HolderNumChangeRate) FROM gdhs d WHERE d.enddate=? and d.HolderNumChangeRate<1000 ORDER BY d.stockcode

index.report.21.name = 主力-机构仓位-c
index.report.21.sql  = SELECT  CONCAT_WS('|', left(SCode,1)='6', SCode, DATE_FORMAT(RDate,'%Y%m%d'), sum(LTZB)) FROM jgcc where lx in(1,2,3,5) and RDate=? group by SCode order by SCode

index.report.22.name = 主力-机构增仓-c
index.report.22.sql  = SELECT CONCAT_WS('|', left(SCode,1)='6', SCode, DATE_FORMAT(RDate,'%Y%m%d'), round(sum(LTZBChange),2)) FROM jgcc where lx in(1,2,3,5) and RDate=? group by SCode order by SCode
